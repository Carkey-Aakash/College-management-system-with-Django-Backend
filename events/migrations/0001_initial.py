# Generated by Django 5.2.3 on 2025-07-03 13:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_level', models.CharField(choices=[('class', 'Class Level'), ('faculty', 'Faculty_Level'), ('college', 'College_Level')], max_length=20)),
                ('event_type', models.CharField(choices=[('technical', 'Technical'), ('non_technical', 'Non-Technical'), ('workshop', 'Workshop'), ('seminar', 'Seminar'), ('competition', 'Competition'), ('cultural', 'Cultural'), ('sports', 'Sports'), ('others', 'others')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('venue', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('max_participants', models.IntegerField(default=100)),
                ('registration_deadline', models.DateTimeField()),
                ('is_paid_event', models.BooleanField(default=False)),
                ('registration_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('poster', models.ImageField(blank=True, null=True, upload_to='event_posters/')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('status_comments', models.TextField(blank=True, help_text='Optional comments related to the current status.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('Organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'events_event',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EventConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conflict_type', models.CharField(default='venue_time_overlap', max_length=50)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('detected', 'Detected'), ('resolved', 'Resolved'), ('ignored', 'Ignored')], default='detected', max_length=20)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('event1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_event1', to='events.event')),
                ('event2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conflicts_as_event2', to='events.event')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('attended', 'Attended')], default='pending', max_length=20)),
                ('payment_status', models.BooleanField(default=False)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('attended', models.BooleanField(default=False)),
                ('attendance_marked_at', models.DateTimeField(blank=True, null=True)),
                ('feedback_given', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='events.event')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'events_registration',
                'unique_together': {('event', 'student')},
            },
        ),
        migrations.CreateModel(
            name='EventFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('content_quality_rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('organization_rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('comments', models.TextField(blank=True)),
                ('suggestions', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_feedbacks', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='events.event')),
                ('registration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='events.eventregistration')),
            ],
            options={
                'db_table': 'events_feedback',
                'unique_together': {('event', 'Student')},
            },
        ),
    ]
